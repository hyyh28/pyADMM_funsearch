{
  "sample_order": 7,
  "function": "def sparsesc(L, lambda_, k, opts):\n    tol = opts.get('tol', 1e-8)\n    max_iter = opts.get('max_iter', 500)\n    rho = opts.get('rho', 1.1)\n    mu = opts.get('mu', 1e-4)\n    max_mu = opts.get('max_mu', 1e10)\n    DEBUG = opts.get('DEBUG', 0)\n\n    n = L.shape[0]\n    P = np.zeros((n, n))\n    Q = np.zeros_like(P)\n    Y = np.zeros_like(P)\n\n    def update_rho(rho, dY, P, Q):\n        norm_dY = np.linalg.norm(dY, 'fro')\n        norm_P = np.linalg.norm(P, 'fro')\n        norm_Q = np.linalg.norm(Q, 'fro')\n        if norm_dY > 10 * max(norm_P, norm_Q):\n            return rho * 2\n        elif max(norm_P, norm_Q) > 10 * norm_dY:\n            return rho / 2\n        return rho\n\n    def prox_l1(X, tau):\n        return np.sign(X) * np.maximum(np.abs(X) - tau, 0)\n\n    def project_fantope(X, k):\n        U, S, Vt = svd(X, full_matrices=False)\n        S = np.maximum(S, 0)\n        S = np.sort(S)[::-1]\n        S = S[:k]\n        S = np.diag(S)\n        return np.dot(U[:, :k], np.dot(S, Vt[:k, :]))\n\n    for iter_ in range(max_iter):\n        Pk = P.copy()\n        Qk = Q.copy()\n\n        # Update P\n        P = prox_l1(Q - (Y + L) / mu, lambda_ / mu)\n\n        # Update Q\n        temp = (P + Y / mu)\n        temp = (temp + temp.T) / 2\n        Q = project_fantope(temp, k)\n\n        dY = P - Q\n        chgP = np.max(np.abs(Pk - P))\n        chgQ = np.max(np.abs(Qk - Q))\n        chg = max(chgP, chgQ, np.max(np.abs(dY)))\n\n        if DEBUG and (iter_ == 0 or (iter_ + 1) % 10 == 0):\n            obj = np.trace(np.dot(P.T, L)) + lambda_ * np.sum(np.abs(Q))\n            err = np.linalg.norm(dY, 'fro')\n            print(f\"iter {iter_+1}, mu={mu}, rho={rho}, obj={obj}, err={err}\")\n\n        if chg < tol:\n            break\n\n        Y = Y + mu * dY\n        mu = min(rho * mu, max_mu)\n        rho = update_rho(rho, dY, P, Q)\n\n    obj = np.trace(np.dot(P.T, L)) + lambda_ * np.sum(np.abs(Q))\n    err = np.linalg.norm(dY, 'fro')\n\n    return P, obj, err, iter_\n\n",
  "score": null
}
