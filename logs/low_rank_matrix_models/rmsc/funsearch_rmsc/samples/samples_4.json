{"sample_order": 4, "function": "def rmsc(X, lambd, opts):\n    tol = opts.get('tol', 1e-8)\n    max_iter = opts.get('max_iter', 500)\n    rho = opts.get('rho', 1.1)\n    mu = opts.get('mu', 1e-4)\n    max_mu = opts.get('max_mu', 1e10)\n    DEBUG = opts.get('DEBUG', 0)\n\n    d, n, m = X.shape\n    L = np.zeros((d, n))\n    S = np.zeros((d, n, m))\n    Z = L.copy()\n    Y = S.copy()\n    Y2 = L.copy()\n    \n    for iter in range(max_iter):\n        Lk, Sk, Zk = L.copy(), S.copy(), Z.copy()\n        \n        Z, nuclearnormZ = prox_nuclear(L + Y2 / mu, 1 / mu)\n        for i in range(m):\n            S[:, :, i] = prox_l1(X[:, :, i] - L - Y[:, :, i] / mu, lambd / mu)\n        \n        L = project_simplex((np.sum(X - S - Y / mu, axis=2) + Z - Y2 / mu) / (m + 1))\n        \n        dY = np.zeros_like(S)\n        for i in range(m):\n            dY[:, :, i] = L + S[:, :, i] - X[:, :, i]\n        dY2 = L - Z\n        \n        chgL = np.max(np.abs(Lk - L))\n        chgZ = np.max(np.abs(Zk - Z))\n        chgS = np.max([np.max(np.abs(Sk[:, :, i] - S[:, :, i])) for i in range(m)])\n        chg = max(chgL, chgZ, chgS, np.max(np.abs(dY)), np.max(np.abs(dY2)))\n        \n        if DEBUG and (iter == 0 or iter % 10 == 0):\n            obj = nuclearnormZ + lambd * np.sum(np.abs(S))\n            err = np.sqrt(np.linalg.norm(dY) ** 2 + np.linalg.norm(dY2, 'fro') ** 2)\n            print(f'iter {iter}, mu={mu}, rho={rho}, obj={obj}, err={err}')\n        \n        if chg < tol:\n            break\n        \n        Y += mu * dY\n        Y2 += mu * dY2\n        mu = min(rho * mu, max_mu)\n        \n        # Update rho dynamically\n        rho_update_factor = 1.1\n        if np.linalg.norm(dY) > 10 * np.linalg.norm(dY2):\n            rho *= rho_update_factor\n        elif np.linalg.norm(dY2) > 10 * np.linalg.norm(dY):\n            rho /= rho_update_factor\n    \n    obj = nuclearnormZ + lambd * np.sum(np.abs(S))\n    err = np.sqrt(np.linalg.norm(dY) ** 2 + np.linalg.norm(dY2, 'fro') ** 2)\n    \n    return L, S, obj, err, iter\n\n", "score": -26.0}